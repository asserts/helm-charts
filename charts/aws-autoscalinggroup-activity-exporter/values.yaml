replicaCount: 1

image:
  repository: asserts/aws-autoscalinggroup-activity-exporter.dev
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # alternative imagePullSecrets via serviceaccount
  imagePullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

serviceMonitor:
  enabled: false

env:
  AWS_ACCESS_KEY_ID: ""
  AWS_SECRET_ACCESS_KEY: ""

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# configuration
# https://github.com/asserts/aws-autoscalinggroup-activity-exporter/blob/main/README.md

# AWS Region (required)
region: default-region

config: |
  # tags optional, else will discover ALL AutoScalingGroups in region
  # # autoscaling groups to discover by tag
  # tags:
  #   - key: "kubernetes.io/cluster/my-cluster"
  #     value: "owned"
  #   - key: "eks:nodegroup-name"
  #     value: "my-spot-nodegroup"
  # causes can be customized, reason become prometheus metric label
  causes:
    - pattern: ".*Spot Instance interruption notice.*"
      reason: "interrupt"
    - pattern: ".*EC2 instance rebalance recommendation.*"
      reason: "rebalance"
    - pattern: ".*user request.*"
      reason: "user_request"
