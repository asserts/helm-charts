fullnameOverride: asserts-agent
nameOverride: asserts-agent

serviceAccount:
  create: true

rbac:
  create: true

resources:
  requests:
    cpu: 400m
    memory: 1Gi
  limits:
    memory: 1Gi

# extraArgs:
#   log-level: "debug"

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: failure-domain.beta.kubernetes.io/zone
              operator: In
              values:
                - us-west-2a

config:
  global:
    evaluation_interval: 30s
    external_labels:
      source: asserts-agent

  # Rule files specifies a list of globs. Rules and alerts are read from
  # all matching files.
  rule_files:
    - /etc/asserts-agent/rules/*.yml

  # Alerting specifies settings related to the Alertmanager.
  # alerting:
  #   alertmanagers:
  #     - kubernetes_sd_configs:
  #         - role: pod
  #       relabel_configs:
  #         - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_instance]
  #           regex: victoria-metrics-alertmanager
  #           action: keep
  #         - source_labels: [__meta_kubernetes_namespace]
  #           regex: tsdb
  #           action: keep
  #         - source_labels: [__meta_kubernetes_pod_container_port_number]
  #           regex:
  #           action: drop

  remote_write:
    - url: http://prometheus-receiver-server.agent-beta.svc.cluster.local:9090/api/v1/write
      write_relabel_configs:
        - regex: http_requests?_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - handler
          target_label: asserts_request_context
        - regex: http_requests?_duration_milliseconds.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - handler
          target_label: asserts_request_context
        - regex: http_requests?_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - uri
          target_label: asserts_request_context
        - regex: http_requests?_duration_seconds.*;(.+?)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: http_requests?_duration_seconds.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - status_code
          target_label: status
        - regex: (elasticsearch_indices_get_.*|elasticsearch_transport_.*|elasticsearch_filesystem_io_stats_.*);(.+)
          replacement: $2
          action: replace
          source_labels:
            - asserts_name
            - name
          target_label: asserts_request_context
        - regex: elasticsearch_thread_pool_.*;(.+);(.+)
          replacement: $1#$2
          action: replace
          source_labels:
            - asserts_name
            - name
            - type
          target_label: asserts_request_context
        - regex: grpc_server_.*;(.+);(.+)
          replacement: $1#$2
          action: replace
          source_labels:
            - asserts_name
            - grpc_service
            - grpc_method
          target_label: asserts_request_context
        - regex: prom_react_ttc_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: prom_react_ttc_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - navigation_type
          target_label: asserts_request_type
        - regex: prom_ui_request_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - uri
          target_label: asserts_request_context
        - regex: flux_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - target_namespace
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - controller_class
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - host
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - exported_service
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_.*;(.+);(.+);(.+)
          replacement: $1#$2#$3
          action: replace
          source_labels:
            - asserts_name
            - ingress
            - exported_service
            - exported_namespace
          target_label: asserts_request_context
        - regex: nginx_ingress_controller_nginx_process_connections;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - state
          target_label: asserts_request_context
        - regex: hekate_cluster_gossip_messages_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - type
          target_label: asserts_request_context
        - regex: hekate_network_message_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - protocol
          target_label: asserts_request_context
        - regex: loopback_invocation_.*;(.+?)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: flask_http_.*;(.+)
          replacement: $1
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: vm_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - action
          target_label: asserts_request_context
        - regex: vm_request_duration_seconds.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: vm_http_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - path
          target_label: asserts_request_context
        - regex: vmalert_.*;(.+)
          replacement: Others
          action: replace
          source_labels:
            - asserts_name
            - group
          target_label: asserts_request_context
        - regex: vmalert_.*;(Asserts.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - group
          target_label: asserts_request_context
        - regex: vm_tenant_inserted_rows_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - type
          target_label: asserts_request_context
        - regex: vmagent_http_requests?_?(errors)?_total;(.+);(.+)
          replacement: $1#$2
          action: replace
          source_labels:
            - asserts_name
            - path
            - protocol
          target_label: asserts_request_context
        - regex: vmagent_remotewrite_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - url
          target_label: asserts_request_context
        - regex: vmagent_rows_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - type
          target_label: asserts_request_context
        # - regex: kube_node_labels;(.+)-worker-.*
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_eks_amazonaws_com_nodegroup
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_alpha_eksctl_io_cluster_name
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_Name
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_name
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;gke-(.+)-[0-9A-Za-z_]*-[default]*-?[pool]*-[0-9A-Za-z_]*-[0-9A-Za-z_]*.*
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - node
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_kubernetes_azure_com_cluster
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - cluster
        #   target_label: asserts_cluster
        # - regex: kube_node_labels;worker.*
        #   replacement: workers
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_konvoy_mesosphere_com_node_pool
        #   target_label: asserts_nodegroup
        # - regex: kube_node_labels;control.*
        #   replacement: control-plane
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_konvoy_mesosphere_com_node_pool
        #   target_label: asserts_nodegroup
        # - regex: kube_node_labels;(.+):.+;
        #   replacement: kubernetes-${1}
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - instance
        #     - asserts_cluster
        #   target_label: asserts_cluster
        # - regex: kube_ingress_path;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - host
        #   target_label: asserts_request_context
        # - regex: TaskRun
        #   action: drop
        #   source_labels:
        #     - created_by_kind
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_aws_autoscaling_groupName
        #     - label_node_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_aws_autoscaling_group_name
        #     - label_node_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_info;aws.*(i-.*)
        #   replacement: ${1}
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - provider_id
        #   target_label: instance_id
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_eks_amazonaws_com_nodegroup
        #     - label_beta_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_alpha_eksctl_io_nodegroup_name
        #     - label_beta_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_cloud_google_com_gke_nodepool
        #     - label_node_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $2
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_kubernetes_azure_com_cluster
        #     - label_node_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+);(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - asserts_nodegroup
        #     - label_beta_kubernetes_io_instance_type
        #   target_label: instance_type
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_aws_autoscaling_groupName
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_ec2_amazonaws_com_aws_autoscaling_group_name
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_eks_amazonaws_com_nodegroup
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_alpha_eksctl_io_nodegroup_name
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_cloud_google_com_gke_nodepool
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - label_agentpool
        #   target_label: node_group_name
        # - regex: kube_node_labels;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - __name__
        #     - asserts_nodegroup
        #   target_label: node_group_name
        # - regex: app_kubernetes_io_managed_by|app_kubernetes_io_part_of|chart|connection_security_policy|control_plane|controller_revision_hash|controller_tools_k8s_io|cluster_url|destination_canonical_revision|destination_canonical_service|destination_principal|exported_component|heritage|install_operator_istio_io_owning_resource|kaptain_component|kudo_dev_instance|kudo_dev_operator|operator_istio_io_component|pod_template_hash|release|role|security_istio_io_tlsMode|service_istio_io_canonical_name|service_istio_io_canonical_revision|serving_knative_dev_release|source_canonical_revision|source_canonical_service|source_principal|statefulset_kubernetes_io_pod_name|v1_min_io_pool|v1_min_io_tenant|v1_min_io_version
        #   action: labeldrop
        # - regex: fluentbit_.*;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - asserts_name
        #     - name
        #   target_label: asserts_request_context
        # - regex: alertmanager_http_.*;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - asserts_name
        #     - handler
        #   target_label: asserts_request_context
        # - regex: alertmanager_notifications_.*;(.+)
        #   replacement: $1
        #   action: replace
        #   source_labels:
        #     - asserts_name
        #     - integration
        #   target_label: asserts_request_context
        # - regex: alertmanager_.*;victoria-metrics-alertmanager-headless
        #   action: drop
        #   source_labels:
        #     - asserts_name
        #     - service
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);destination;(.+)
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - destination_workload
        #   target_label: workload
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);source;(.+)
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - source_workload
        #   target_label: workload
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);destination;(.+)
        #   replacement: ${2}/istio-proxy
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - destination_workload
        #   target_label: job
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);source;(.+)
        #   replacement: ${2}/istio-proxy
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - source_workload
        #   target_label: job
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);source;(.+);
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - source_workload_namespace
        #     - namespace
        #   target_label: namespace
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);destination;(.+);
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - destination_workload_namespace
        #     - namespace
        #   target_label: namespace
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);source;(.+)
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - destination_workload
        #   target_label: asserts_request_context
        # - regex: (istio_requests_total|istio_request_duration_.*|istio_request_bytes_sum|istio_response_bytes_sum);destination;(.+)
        #   replacement: ${2}
        #   source_labels:
        #     - asserts_name
        #     - reporter
        #     - source_workload
        #   target_label: asserts_request_context
        - regex: istio_requests_total;istio-telemetry
          action: drop
          source_labels:
            - asserts_name
            - destination_workload
        - regex: prometheus_http_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - handler
          target_label: asserts_request_context
        - regex: prometheus_rule_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - rule_group
          target_label: asserts_request_context
        - regex: pg_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - datname
          target_label: data_source
        - regex: .*_php_service_time_.*;(.+?);(.+?)
          replacement: $1.$2
          action: replace
          source_labels:
            - asserts_name
            - service
            - method
          target_label: asserts_request_context
        - regex: redis_commands_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - cmd
          target_label: asserts_request_context
        - regex: http_.*_requests_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - uri
          target_label: asserts_request_context
        - regex: method_timed_seconds.*;(.+);(.+)
          replacement: $1#$2
          action: replace
          source_labels:
            - asserts_name
            - class
            - method
          target_label: asserts_request_context
        - regex: logback_events_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - level
          target_label: asserts_request_context
        - regex: gateway_requests_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - routeId
          target_label: asserts_request_context
        - regex: executor_execution_seconds_.*;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - name
          target_label: asserts_request_context
        - regex: fluentd_input_status_num_records_total;(.+)
          replacement: $1
          action: replace
          source_labels:
            - asserts_name
            - tag
          target_label: asserts_request_context
        - regex: (fluentd_output_.*|fluentd_status_.*);(.+)
          replacement: $2
          action: replace
          source_labels:
            - asserts_name
            - type
          target_label: asserts_request_context

  promxy:
    server_groups:
      - static_configs:
          - targets:
            - prometheus-kube-prometheus-stack-prometheus-0.prometheus-operated.prometheus.svc.cluster.local:9090
        labels:
          sg: chief
        anti_affinity: 10s
        remote_read: false
        query_params:
          nocache: 1
        scheme: http
        http_client:
          dial_timeout: 1s
          tls_config:
            insecure_skip_verify: true
        ignore_error: true

      - static_configs:
          - targets:
            - prometheus-receiver-server.agent-beta.svc.cluster.local:9090
        anti_affinity: 10s
        remote_read: false
        query_params:
          nocache: 1
        scheme: http
        http_client:
          dial_timeout: 1s
          tls_config:
            insecure_skip_verify: true
        ignore_error: true

#alerts:

extraVolumes:
  - name: rules-config
    emptyDir: {}

extraVolumeMounts:
  - name: rules-config
    mountPath: /etc/asserts-agent/rules

extraContainers:
  - name: rules-config-sidecar
    image: '543343501704.dkr.ecr.us-west-2.amazonaws.com/ai.asserts.k8s-sidecar:1.14.2'
    imagePullPolicy: IfNotPresent
    env:
      - name: LABEL
        value: asserts-agent-rules-config
      - name: FOLDER
        value: /etc/asserts-agent/rules
      - name: REQ_URL
        value: http://localhost:8082/-/reload
      - name: REQ_METHOD
        value: POST
    volumeMounts:
      - name: rules-config
        mountPath: /etc/asserts-agent/rules
