apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "redisearch.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "redisearch.labels" . | nindent 4 }}
    app.kubernetes.io/component: master
    {{- with .Values.extraLabels }}
    {{- toYaml . | nindent 4 -}}
    {{- end }}
  {{- if .Values.annotations }}
  annotations:
  {{- toYaml .Values.annotations | nindent 4 -}}
  {{- end }}
spec:
  replicas: 1
  serviceName: {{ include "redisearch.fullname" . }}
  {{- if .Values.updateStrategy }}
  updateStrategy: {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "redisearch.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: master
  template:
    metadata:
      labels: {{- include "redisearch.labels" . | nindent 8 }}
        app.kubernetes.io/component: master
        {{- with .Values.extraPodLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.extraPodAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        fsGroup: {{ .Values.podSecurityContext.fsGroup }}
      serviceAccountName: {{ template "redisearch.serviceAccountName" . }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.initContainers.disableTHP }}
      initContainers:
        # Disabling transparent huge pages does not work in kind due to:
        # https://github.com/kubernetes-sigs/kind/issues/1474:
        - name: disable-thp
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -ec
            - |
              echo never > /host-sys/kernel/mm/transparent_hugepage/enabled
          securityContext:
            privileged: true
            runAsUser: {{ .Values.initContainers.containerSecurityContext.runAsUser }}
          volumeMounts:
            - name: host-sys
              mountPath: /host-sys
      {{- end }}
      containers:
        - name: redis
          image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.master.image.pullPolicy | quote }}
          command: {{- toYaml .Values.master.command | nindent 12 }}
          args: {{- toYaml .Values.master.args | nindent 12 }}
          securityContext:
            runAsUser: {{ .Values.master.containerSecurityContext.runAsUser }}
          env:
            - name: MASTER
              value: "true"
          ports:
            - name: redis
              containerPort: {{ .Values.master.containerPort }}
          resources: {{- toYaml .Values.master.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /redis-master
            - name: redis-data
              mountPath: {{ .Values.master.persistence.path }}
          {{- with .Values.master.extraVolumeMounts }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.metrics.enabled }}
        - name: redis-exporter
          image:  "{{ .Values.metrics.image.repository }}:{{ .Values.metrics.image.tag }}"
          imagePullPolicy: {{ .Values.metrics.image.pullPolicy | quote }}
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:{{ .Values.master.containerPort }}"
          ports:
            - name: metrics
              protocol: TCP
              containerPort: {{ .Values.metrics.containerPort }}
          resources: {{- toYaml .Values.metrics.resources | nindent 12 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "redisearch.fullname" . }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.initContainers.disableTHP }}
        - name: host-sys
          hostPath:
            path: /sys
        {{- end }}
  {{- if not .Values.master.persistence.enabled }}
        - name: redis-data
          emptyDir: {}
  {{- else if .Values.master.persistence.existingClaim }}
        - name: redis-data
          persistentVolumeClaim:
            claimName: {{ .Values.master.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: redis-data
        labels: {{- include "redisearch.labels" . | nindent 10 }}
          app.kubernetes.io/component: master
      spec:
        accessModes:
        {{- range .Values.master.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.master.persistence.size | quote }}
        {{ include "redisearch.storageClass"  . }}
  {{- end }}
