replicaCount: 1

image:
  repository: asserts/otel-collector
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag:

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""
  imagePullSecrets: []
  annotations: {}
  extraLabels: {}

## trace store configuration
##
## options:
##
## OTLP-HTTP
## AWS-XRAY
## GOOGLE-CLOUDTRACE
traceStore: OTLP

logLevel: info

## Asserts configuration
##
# assertsApiEndpoint: ""
# assertsUser: ""
# assertsPassword: ""
# assertsEnv: ""
# assertsSite: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # enabled: false
  # allowPrivilegeEscalation: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  annotations: {}
  # type: LoadBalancer
  # loadBalancerIP: 1.2.3.4
  # loadBalancerSourceRanges: []

ingress:
  enabled: false

  ## For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
  ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
  # ingressClassName: nginx

  annotations: {}

  extraLabels: {}

  hosts: []
  #   - asserts-otel-collector.domain.com

  path: /

  ## pathType is only for k8s >= 1.18
  pathType: Prefix

  ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.
  extraPaths: []
  # - path: /
  #   backend:
  #     serviceName: ssl-redirect
  #     servicePort: use-annotation

  tls: []
  #   - secretName: asserts-otel-collector-tls
  #     hosts:
  #       - asserts-otel-collector.domain.com

## ServiceMonitor configuration
##
serviceMonitor:
  enabled: false
  endpoints:
    - port: otel-metrics
      path: /metrics
      honorLabels: true
    - port: prom-metrics
      path: /metrics
      honorLabels: true
    - port: http-metrics
      path: /metrics
      honorLabels: true
  # Use if you need to add a label that matches
  # your prometheus-operator serviceMonitorSelector (e.g. release: kube-prometheus-stack)
  extraLabels: {}

command: []
args: []

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

ports:
  otlp:
    enabled: true
    containerPort: 4317
    servicePort: 4317
    protocol: TCP
  otlp-http:
    enabled: true
    containerPort: 4318
    servicePort: 4318
    protocol: TCP
  jaeger-grpc:
    enabled: true
    containerPort: 14250
    servicePort: 14250
    protocol: TCP
  jaeger-thrift:
    enabled: true
    containerPort: 14268
    servicePort: 14268
    protocol: TCP
  jaeger-http:
    enabled: true
    containerPort: 14278
    servicePort: 14278
    protocol: TCP
  otel-metrics:
    enabled: true
    containerPort: 8889
    servicePort: 8889
    protocol: TCP
  prom-metrics:
    enabled: true
    containerPort: 8888
    servicePort: 8888
    protocol: TCP
  http-metrics:
    enabled: true
    containerPort: 9465
    servicePort: 9465
    protocol: TCP

# ref: https://github.com/jaegertracing/helm-charts/blob/main/charts/jaeger/values.yaml
jaeger:
  enabled: true
  allInOne:
    enabled: true
  agent:
    enabled: false
  collector:
    enabled: false
  query:
    enabled: false
  cassandra:
    config:
      cluster_size: 1
